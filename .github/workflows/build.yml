# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - 'development'

  pull_request:
    branches:
      - 'development'
      - 'release'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
#permissions:
#  contents: read
#  pages: write
#  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
#concurrency:
#  group: "pages"
#  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Install dependencies
        run: npm install
      - name: Git Fetch
        run: git fetch
      - name: Create gh-pages directories
        run: mkdir -p gh-pages/dev
      - name: Build Development
        run: git checkout development && npm run esbuild-minify && cp src/bundle.js src/index.html gh-pages/dev/
      - name: Build Release
        run: git checkout release && npm run esbuild-minify && cp src/bundle.js src/index.html gh-pages/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './gh-pages'
      #- name: Deploy to GitHub Pages
      #  id: deployment
      #  uses: actions/deploy-pages@v2
